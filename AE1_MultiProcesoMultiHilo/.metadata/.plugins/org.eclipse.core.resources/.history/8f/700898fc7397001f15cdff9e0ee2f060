package florida.AppProteinas;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

public class SimulacionMP {

	private static int contadorSimulaciones = 0;

	public static double simulation(int type) {
		double calc = 0.0;
		double simulationTime = Math.pow(5, type);
		double startTime = System.currentTimeMillis();
		double endTime = startTime + simulationTime;
		while (System.currentTimeMillis() < endTime) {
			calc = Math.sin(Math.pow(Math.random(), 2));
		}
		return calc;
	}

	public static void realizarSimulacion(int tipo, String nombreFichero) throws IOException {
		DateTimeFormatter dateFormatterDate = DateTimeFormatter.ofPattern("yyyyMMdd_HHmmss_SSS");

		LocalDateTime inicioSimProte = LocalDateTime.now();
		String tiempoInicioProte = inicioSimProte.format(dateFormatterDate);

		long timeInicio = System.currentTimeMillis();

		double resultado = simulation(tipo);

		long timeFin = System.currentTimeMillis();

		LocalDateTime tiempoFinSimProte = LocalDateTime.now();
		String tiempoFinProte = tiempoFinSimProte.format(dateFormatterDate);

		long duracionMS = timeFin - timeInicio;
		long duracionSeg = duracionMS / 1000;
		long duracionCent = (duracionMS % 1000) / 10;
		String duracion = String.format("%d_%02d", duracionSeg, duracionCent);

		escribirFichero(nombreFichero, tiempoInicioProte, tiempoFinProte, duracion, resultado);
	}

	public static String nombreFicheros(String tipoSimulacion, int tipoProteina, int numeroSimulaciones,
			String tiempoInicioSim, String duracionCentesimas) {

		return "PROT_" + tipoSimulacion + "_" + tipoProteina + "_n" + numeroSimulaciones + "_" + tiempoInicioSim + "_"
				+ duracionCentesimas + ".sim";
	}

	public static void escribirFichero(String nombreFichero, String tiempoInicioProte, String tiempoFinProte,
			String duracion, double resultado) {
		File file = new File(nombreFichero);

		try (BufferedWriter bw = new BufferedWriter(new FileWriter(file))) {
			bw.write("Inicio: " + tiempoInicioProte + "\n");
			bw.write("Fin: " + tiempoFinProte + "\n");
			bw.write("Duración: " + duracion + "\n");
			bw.write("Resultado: " + resultado);
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	public static synchronized int contadorSimulacion() {
		return contadorSimulaciones++;
	}

	public static void main(String[] args) throws IOException {
		if (args.length < 1) {
			System.err.println("Debe haber como mínimo un tipo de proteina que simular.");
			return;
		}
		int tipoProteina = Integer.parseInt(args[0]);
		String nombreFichero = args[1];

		realizarSimulacion(tipoProteina, nombreFichero);

	}
}